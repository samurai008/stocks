{"version":3,"sources":["App.js","components/StockModal.js","components/StockList.js","actions/StockPriceActions.js","serviceWorker.js","index.js","store/StockPriceStore.js","dispatcher/dispatcher.js"],"names":["stockSocket","StockModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","_this2","StockPriceStore","on","setState","getAll","sKey","_this3","displayPrices","react_default","a","createElement","undefined","pastPrices","map","value","i","key","className","length","base","reverse","style","position","top","left","width","transform","minHeight","maxHeight","overflowY","zIndex","showModal","name","onClick","closeFn","Component","StockList","stocks","sortFn","stockModalFn","b","price","Date","parse","time","keys","sort","bind","data-key","href","e","data-name","toFixed","slice","StockTable","createStockTable","AskToLoad","colSpan","sortByName","sortByPrice","sortByTime","window","closeConnection","close","App","mockPrices","stockModalData","showStockModal","WebSocket","getStockPrices","onmessage","event","dispatcher","dispatch","type","openConnection","components_StockList","components_StockModal","closeModal","height","backgroundColor","Boolean","location","hostname","match","document","title","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister","_Users_Nilabjo_react_apps_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_Nilabjo_react_apps_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_Nilabjo_react_apps_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","stockDict","stockData","eval","forEach","val","concat","toString","push","emit","action","reloadStocks","EventEmitter","stockPriceStore","register","handleActions","flux__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","Dispatcher"],"mappings":"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","file":"static/js/main.1ff1d2c8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport StockPriceStore from \"./store/StockPriceStore\";\nimport * as StockPriceActions from \"./actions/StockPriceActions\";\nimport tippy from 'tippy.js';\nimport 'tippy.js/dist/tippy.css';\nimport StockModal from \"./components/StockModal\";\nimport StockList from \"./components/StockList\";\n\nconst uri = \"wss://livestocks5.herokuapp.com\";\nlet stockSocket;\nwindow.closeConnection = () => stockSocket.close(); // From the console BO\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      stocks: StockPriceStore.getAll(),\n      sortFn: () => {},\n      mockPrices: [\n        '12.2',\n        '233.2',\n        '22.21',\n        '65.75'\n      ],\n      stockModalData: {},\n      showStockModal: false,\n      sKey: null\n    };\n  }\n\n  openConnection() {\n    stockSocket = new WebSocket(uri);\n    this.getStockPrices();\n  }\n\n  closeConnection() {\n    stockSocket.close();\n  }\n\n  getStockPrices() {\n    stockSocket.onmessage = event => {\n      StockPriceActions.reloadStocks(event.data);\n    };\n  }\n\n\n\n  showStockModal(data, key) {\n    this.setState({\n      stockModalData: data,\n      showStockModal: !this.state.showStockModal,\n      sKey: key\n    })\n  }\n\n  diffInfo(base) {\n    return base ? \"On the rise!\" : \"On the low\";\n  }\n\n  closeModal() {\n    this.setState({\n      showStockModal: !this.state.showStockModal\n    });\n  }\n\n  componentWillMount() {\n    StockPriceStore.on(\"stockChange\", () => {\n      this.setState({\n        stocks: StockPriceStore.getAll()\n      });\n    });\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    const backdropStyle = {\n      position: \"fixed\",\n      top: \"0\",\n      left: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"rgba(0,0,0,0.7)\"\n    }\n\n    return (\n      <div>\n        <div className=\"container p-2\">\n          <div className=\"d-flex justify-content-between\">\n            <div>\n              <a href=\"#\" onClick={this.openConnection.bind(this)}>\n                Open Stream\n              </a>\n            </div>\n            <div>\n              <a href=\"#\" onClick={this.closeConnection.bind(this)}>\n                Close Stream\n              </a>\n            </div>\n          </div>\n\n          <StockList stocks={this.state.stocks} stockModalFn={this.showStockModal.bind(this)} />\n\n        </div>\n\n        <StockModal showModal={this.state.showStockModal} data={this.state.stockModalData} \n        closeFn={this.closeModal.bind(this)}\n        sKey={this.state.sKey} />\n\n        <div style={backdropStyle} className={!this.state.showStockModal ? \"d-none\" : \"\"}></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport StockPriceStore from \"../store/StockPriceStore\";\n\nclass StockModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null\n    };\n  }\n\n  componentWillMount() {\n    StockPriceStore.on(\"stockChange\", () => {\n      this.setState({\n        data: StockPriceStore.getAll()[this.props.sKey]\n      })\n    });\n  }\n\n  render() {\n    const modalStyle = {\n      position: \"fixed\",\n      top: \"50%\",\n      left: \"50%\",\n      width: \"50%\",\n      transform: \"translateX(-50%) translateY(-50%)\",\n      minHeight: \"400px\",\n      maxHeight: \"70%\",\n      overflowY: \"scroll\",\n      zIndex: 1\n    };\n\n    let displayPrices = (<div>Loading data...</div>);\n\n    if (this.state.data !== null && this.state.data !== undefined) {\n      let listPrices = this.state.data.pastPrices || [];\n      displayPrices = listPrices.map((value, i) => {\n        return (\n          <li\n            key={i}\n            className={i === this.state.data.pastPrices.length - 1 ? \"font-weight-bold\" : \"font-weight-light\"}\n          >\n            \n            {value} {i === this.state.data.pastPrices.length - 1 ? (\n              this.state.data.base ? (\n                <i className=\"fas fa-arrow-up text-success\" />\n              ) : (\n                <i className=\"fas fa-arrow-down text-danger\" />\n              )\n            ) : (\n              \"\"\n            )}\n          </li>\n        );\n      }).reverse();\n    }\n\n    return (\n      <div\n        style={modalStyle}\n        className={!this.props.showModal ? \"d-none\" : \"bg-light p-2 container\"}\n      >\n        <div className=\"d-flex justify-content-between\">\n          <div>\n            <h3>{this.props.data.name}</h3>\n          </div>\n          <div>\n            <button className=\"btn\" onClick={this.props.closeFn}>\n              Close\n            </button>\n          </div>\n        </div>\n        <ul className=\"list-unstyled\">{displayPrices}</ul>\n      </div>\n    );\n  }\n}\n\nexport default StockModal;\n","import React, { Component } from \"react\";\n\nclass StockList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stocks: props.stocks,\n      sortFn: () => { },\n      stockModalFn: props.stockModalFn\n    }\n  }\n  sortByName(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }\n\n  sortByPrice(a, b) {\n    return this[b].price - this[a].price;\n  }\n\n  sortByTime(a, b) {\n    return Date.parse(this[a].time) - Date.parse(this[b].time) > 0\n      ? -1\n      : Date.parse(this[a].time) - Date.parse(this[a].time) < 0\n      ? 1\n      : 0;\n  }\n\n  createStockTable(data) {\n    return data ? Object.keys(data)\n      .sort(this.state.sortFn.bind(data))\n      .map((key, i) => {\n        return (\n          <tr data-key={i} key={i}>\n            <td className=\"text-center\">\n              <a\n                href=\"#\"\n                onClick={e => this.state.stockModalFn(data[key], key)}\n                data-name={key}\n              >\n                {data[key].name}\n              </a>\n            </td>\n            <td\n              className={\n                data[key].base\n                  ? \"bg-success text-white text-center\"\n                  : data[key].base === null\n                  ? \"text-dark text-center\"\n                  : \"bg-danger text-white text-center\"\n              }\n            >\n              {data[key].price.toFixed(2)}\n            </td>\n            <td className=\"text-center\">{data[key].time.slice(0, 24)}</td>\n          </tr>\n        );\n      }) : (<tr>\n        <td>Loading data</td>\n      </tr>);\n  }\n\n  render() {\n    const StockTable = this.createStockTable(this.state.stocks);\n    const AskToLoad = (\n      <tr>\n        <td className=\"text-center text-info\" colSpan=\"3\">\n          Click open to load stream.\n        </td>\n      </tr>\n    );\n\n    return (\n      <div>\n        <table className=\"table mt-2\">\n          <thead>\n            <tr>\n              <th className=\"text-center\">\n                <a\n                  href=\"#\"\n                  onClick={e => this.setState({ sortFn: this.sortByName })}\n                >\n                  Name\n                </a>\n              </th>\n              <th className=\"text-center\">\n                <a\n                  href=\"#\"\n                  onClick={e => this.setState({ sortFn: this.sortByPrice })}\n                >\n                  Price\n                </a>\n              </th>\n              <th className=\"text-center\">\n                <a\n                  href=\"#\"\n                  onClick={e => this.setState({ sortFn: this.sortByTime })}\n                >\n                  Last Updated\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(this.state.stocks).length === 0\n              ? AskToLoad\n              : StockTable}\n          </tbody>\n        </table> \n      </div>\n    );\n  }\n}\n\nexport default StockList;","import dispatcher from \"../dispatcher/dispatcher\";\n\nexport function reloadStocks(data) {\n\tdispatcher.dispatch({\n\t\ttype: 'RELOAD_STOCKS',\n\t\tstocks: data\n\t})\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\ndocument.title = 'Stocks';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { EventEmitter } from \"events\";\nimport dispatcher from \"../dispatcher/dispatcher\";\n\nclass StockPriceStore extends EventEmitter {\n  constructor() {\n    super();\n    this.stockDict = {};\n  }\n\n  reloadStocks(data) {\n    // val[0] = name\n    // val[1] = price\n    // val[2] = time\n    let stockData = eval(data);\n\n    stockData.forEach(val => {\n      let base = null; // false = low, true = high\n      let pastPrices = [];\n      val = val.concat(new Date().toString());\n      if (this.stockDict[val[0]]) {\n        pastPrices = this.stockDict[val[0]].pastPrices;\n        base = this.stockDict[val[0]].price < val[1] ? true : false;\n      }\n      pastPrices.push(val[1]);\n      this.stockDict[val[0]] = {\n        name: val[0],\n        price: val[1],\n        time: val[2],\n        base: base,\n        pastPrices: pastPrices\n      };\n    });\n    this.emit(\"stockChange\");\n  }\n\n  handleActions(action) {\n    switch (action.type) {\n      case \"RELOAD_STOCKS\":\n        this.reloadStocks(action.stocks);\n        break;\n    }\n  }\n\n  getAll() {\n    return this.stockDict;\n  }\n}\n\nconst stockPriceStore = new StockPriceStore();\ndispatcher.register(stockPriceStore.handleActions.bind(stockPriceStore));\nexport default stockPriceStore;\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher;"],"sourceRoot":""}